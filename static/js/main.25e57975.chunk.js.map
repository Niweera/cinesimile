{"version":3,"sources":["components/SearchResultsTitle/index.js","components/Movie_Cards/index.js","components/SearchBox/index.js","components/Home/introduction_component.js","components/Home/index.js","components/Navbar/navbarItems.js","components/Navbar/sidenavbar.js","components/Navbar/showSidePanel.js","components/Navbar/index.js","components/Footer/index.js","components/ContactUs/contact_us.js","components/NotFound/not_found.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["SearchResultsTitle","title","className","MovieCard","description","alt","src","SearchBox","useState","results","setResults","selectedMovie","setSelectedMovie","debounced","useDebouncedCallback","value","mockMovies","movie","toLowerCase","startsWith","push","Search","onChange","e","callback","target","id","placeHolderText","map","x","key","onClick","length","style","display","width","IntroComp","Button","Home","navbarItems","url","Sidenavbar","Fragment","HeaderPanel","aria-label","Switcher","item","index","keyLabel","SwitcherItem","href","SwitcherDivider","showSidePanel","allClasses","document","getElementsByClassName","actionButton","getElementById","global_header","i","classList","contains","remove","add","border","Navbar","Header","SkipToContent","HeaderName","prefix","HeaderNavigation","HeaderMenuItem","HeaderGlobalBar","HeaderGlobalAction","Footer","ContactUs","Form","marginBottom","TextInput","invalidText","labelText","TextArea","cols","rows","kind","tabIndex","type","NotFound","Routes","Content","exact","path","render","props","component","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.25e57975.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../../App.css\";\n\nconst SearchResultsTitle = ({ title }) => {\n  return <h2 className=\"search-query\">Movies like: {title}</h2>;\n};\n\nexport default SearchResultsTitle;\n","import React from \"react\";\n\nexport const MovieCard = ({ title, description }) => {\n  return (\n    <div className=\"search-results__card\">\n      <img\n        className=\"search-results__card-poster\"\n        alt=\"movie poster\"\n        src=\"https://dummyimage.com/320x170/bfbfbf/fff\"\n      />\n      <h3 className=\"search-results__card-title\">{title}</h3>\n      <p className=\"search-results__card-description\">{description}</p>\n      <button className=\"search-results__card-button\">Go somewhere</button>\n    </div>\n  );\n};\n","import { Search } from \"carbon-components-react\";\nimport React, { useState } from \"react\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport mockMovies from \"../../data/mockmovies.json\";\nimport SearchResultsTitle from \"../SearchResultsTitle\";\nimport { MovieCard } from \"../Movie_Cards\";\n\nconst SearchBox = () => {\n  const [results, setResults] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n\n  const debounced = useDebouncedCallback((value, setResults) => {\n    let results = [];\n    if (value) {\n      for (let movie of mockMovies) {\n        if (movie.title.toLowerCase().startsWith(value)) {\n          results.push(movie);\n        }\n      }\n    }\n\n    setResults(results);\n  }, 500);\n\n  return (\n    <div className=\"searchBox\">\n      <Search\n        onChange={(e) => {\n          debounced.callback(e.target.value, setResults);\n          if (e.target.value === \"\") {\n            setSelectedMovie(null);\n          }\n        }}\n        id=\"search-1\"\n        placeHolderText=\"Search a movie\"\n      />\n      <div>\n        {results.map((x) => {\n          return (\n            <h4 key={x.id} id={x.id} onClick={() => setSelectedMovie(x)}>\n              {x.title}\n            </h4>\n          );\n        })}\n      </div>\n\n      {selectedMovie && results.length > 0 && (\n        <SearchResultsTitle title={selectedMovie.title} />\n      )}\n\n      <div style={{ display: \"flex\" }}>\n        {selectedMovie &&\n          results.map((x) => {\n            return (\n              <MovieCard\n                key={x.id}\n                style={{ width: \"20%\" }}\n                title={x.title}\n                description={x.description}\n              />\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\nimport { Button } from 'carbon-components-react';\nimport \"../../App.css\"\n\nconst IntroComp = () => {\n  return (\n    <div className=\"intro-comp\">\n      <h1 className=\"landing-page__heading\">hello, movie lovers!</h1>\n      <p>Welcome to CineSmile. We are platform to find similar movies easily. \n        We use sophisticated machine learning models to find similarities between movies and provide you with close matches.\n      </p>\n      <Button className=\"btn\">Learn more</Button>\n    </div>\n  );\n};\n\n\nexport default IntroComp;\n","import React from \"react\";\nimport SearchBox from \"../SearchBox\";\nimport IntroComp from \"./introduction_component\";\nimport \"../../App.css\"\n\nconst Home = () => {\n  return (\n    <div className=\"bx--grid bx--grid--full-width landing-page\">\n      <div className=\"bx--row landing-page__banner\">\n        <div className=\"bx--offset-lg-1 bx--col-lg-14\">\n          <IntroComp/>\n          <SearchBox className=\"search-box\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","export const navbarItems=[\n    \n    {\n        title:\"Home\",\n        url:\"#\",\n    },\n    {\n        title:\"News\",\n        url:\"#\",\n    },\n    {\n        title:\"Contact Us\",\n        url:\"#\",\n    },\n]\n","import React from \"react\";\nimport { navbarItems} from \"./navbarItems\";\nimport {\n    Switcher,\n    SwitcherItem,\n    SwitcherDivider,\n    HeaderPanel,\n  } from \"carbon-components-react\";\nconst Sidenavbar = () => {\n    return (\n        <React.Fragment>\n        <HeaderPanel aria-label=\"Header Panel\" className=\"header-side\">\n        <Switcher aria-label=\"Switcher Container\">\n        {navbarItems.map( (item,index)=>{\n           var keyLabel=index+item.title+\"sideBar\";\n                                return (\n\n                                   <React.Fragment key={index+\"div\"+item.title}><SwitcherItem aria-label={keyLabel} href={item.url} className=\"navbar-items\"  key={index+\"sidebar\"}>{item.title}</SwitcherItem> <SwitcherDivider /></React.Fragment >\n                                );\n                            } )}\n        </Switcher>\n      </HeaderPanel>\n      </React.Fragment>\n    );\n  };\n\nexport default Sidenavbar;  ","const  showSidePanel=()=>\n        {\n            var allClasses= document.getElementsByClassName('bx--header-panel');\n            var actionButton=document.getElementById(\"show-side-panel\");\n            var global_header=document.getElementById(\"global_header\");\n            for (let i = 0; i < allClasses.length; i++) { \n                if(allClasses[i].classList.contains(\"bx--header-panel--expanded\"))\n                {   allClasses[i].classList.remove(\"bx--header-panel--expanded\");\n                    actionButton.classList.remove('focus-in');\n                    actionButton.classList.add('focus-out');\n                    global_header.style.border = \"none\";\n                }\n                     \n                else\n                {\n                    allClasses[i].classList.add(\"bx--header-panel--expanded\");\n                    actionButton.classList.remove('focus-out');\n                    actionButton.classList.add('focus-in');\n                    global_header.style.border = \"1px solid white\";\n\n                }\n                    \n            } \n    \n        }\n\nexport default showSidePanel;        ","import React from 'react';\nimport { navbarItems} from \"./navbarItems\";\nimport './navbar.css';\nimport Sidenavbar from'./sidenavbar';\nimport showSidePanel from'./showSidePanel';\nimport {\n  Header,\n  HeaderName,\n  HeaderNavigation,\n  HeaderMenuItem,\n  HeaderGlobalBar,\n  HeaderGlobalAction,\n  SkipToContent,\n} from \"carbon-components-react\";\nimport { Menu32 } from '@carbon/icons-react';\n const Navbar =()=> {\n        return (\n            <React.Fragment>\n                <Header aria-label=\"CineSimile\" className=\"bx--col-sm-10 header\">\n                    <SkipToContent />\n                    <HeaderName href=\"/\" prefix=\"\" className=\"bx--col-lg-2\">\n                    CineSimile\n                    </HeaderName>\n                    <HeaderNavigation aria-label=\"CineSimileItems\" className=\"nav-menu\" >\n                            {navbarItems.map( (item,index)=>{\n                                return (\n                                    <HeaderMenuItem href={item.url} className=\"navbar-items  bx--col-lg-10\" key={index+item.title}>{item.title}</HeaderMenuItem>\n                                );\n                            } )}\n                            \n                    </HeaderNavigation>\n                    <HeaderGlobalBar id=\"global_header\">\n                        <HeaderGlobalAction aria-label=\"side-bar\" onClick={showSidePanel} id=\"show-side-panel\" >\n                            <Menu32/>\n                        </HeaderGlobalAction>\n                    </HeaderGlobalBar>\n                    <Sidenavbar />\n            </Header>\n            </React.Fragment>\n        );\n    }    \nexport default Navbar;","import React from \"react\";\nimport \"./index.scss\";\n\nconst Footer = () => (\n  <footer className=\"footer\">\n    <h5 className=\"footer__heading\">\n      <span>&copy;</span> CineSimile <span className=\"years\">2020</span>\n    </h5>\n  </footer>\n);\n\nexport default Footer;\n","import React from \"react\";\nimport { Form, TextInput, TextArea, Button } from 'carbon-components-react';\nimport \"../../App.css\"\n\nconst ContactUs = () => {\n  return (\n    <div>\n      <div>\n        <h2 className=\"landing-page__heading\">Leave us a message . . . </h2>\n        <p>We are here to help and answer any question you might have.\n          We look forward to hearing from you.\n        </p>\n      </div>\n   \n      <div>\n    <Form>\n\n      <div style={{marginBottom: '2rem'}}>\n        <TextInput\n          id=\"test2\"\n          invalidText=\"Invalid error message.\"\n          labelText=\"Name: \"\n        />\n      </div>\n\n      <div style={{marginBottom: '2rem'}}>\n        <TextInput\n          id=\"test3\"\n          invalidText=\"Invalid error message.\"\n          labelText=\"Email: \"\n        />\n      </div>\n\n      <div style={{marginBottom: '2rem'}}>\n        <TextArea\n          cols={50}\n          id=\"test5\"\n          invalidText=\"Invalid error message.\"\n          labelText=\"Message: \"\n          rows={4}\n        />\n      </div>\n\n      <Button\n        className=\"btn\"\n        kind=\"primary\"\n        tabIndex={0}\n        type=\"submit\"\n      >\n        Submit\n      </Button >\n</Form>\n</div>\n</div>\n  );\n};\n\nexport default ContactUs;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <div className=\"bx--grid bx--grid--full-width landing-page\">\n      <div className=\"bx--row landing-page__banner\">\n        <div className=\"bx--offset-lg-1 bx--col-lg-14\">\n          <html>\n              <h1>404</h1>\n              <h2>Page not found</h2>\n          </html>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./components/Home\";\n// import MainHeader from \"./components/Header\";\nimport NavBar from \"./components/Navbar/index\";\nimport { Content } from \"carbon-components-react\";\nimport Footer from \"./components/Footer\";\nimport ContactUs from \"./components/ContactUs/contact_us\";\nimport NotFound from \"./components/NotFound/not_found\";\n\nconst Routes = () => {\n  return (\n    <>\n      {/* <MainHeader /> */}\n      <NavBar />\n      <Content>\n        <Router>\n          <Switch>\n            <Route exact path={\"/\"} render={(props) => <Home {...props} />} />\n            <Route exact path={\"/home\"} component={Home} />\n            <Route exact path={\"/contact\"} component={ContactUs} />\n            <Route component={NotFound} />\n          </Switch>\n        </Router>\n      </Content>\n      <Footer />\n    </>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport Routes from \"./routes\";\nimport \"./app.scss\";\n\nconst App = () => {\n  return <Routes />;\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}